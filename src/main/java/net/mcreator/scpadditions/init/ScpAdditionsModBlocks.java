
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.mcreator.scpadditions.init;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.world.level.block.Block;

import net.mcreator.scpadditions.block.TeslaTerminalOffBlock;
import net.mcreator.scpadditions.block.TeslaTerminalBlockBlock;
import net.mcreator.scpadditions.block.TeslaRechargeBlock;
import net.mcreator.scpadditions.block.TeslaGateBlock;
import net.mcreator.scpadditions.block.TeslaActiveBlock;
import net.mcreator.scpadditions.block.TeslaActive4Block;
import net.mcreator.scpadditions.block.TeslaActive3Block;
import net.mcreator.scpadditions.block.TeslaActive2Block;
import net.mcreator.scpadditions.block.Scp914dialVeryFineBlock;
import net.mcreator.scpadditions.block.Scp914dialRoughBlock;
import net.mcreator.scpadditions.block.Scp914dialFineBlock;
import net.mcreator.scpadditions.block.Scp914dialCoarseBlock;
import net.mcreator.scpadditions.block.Scp914dial1to1Block;
import net.mcreator.scpadditions.block.Scp914clockworksBlock;
import net.mcreator.scpadditions.block.Scp914clockworks2Block;
import net.mcreator.scpadditions.block.Scp914bodyBlock;
import net.mcreator.scpadditions.block.Scp914blockBlock;
import net.mcreator.scpadditions.block.Scp914OutputDoorClosedBlock;
import net.mcreator.scpadditions.block.Scp914OutputDoorBlock;
import net.mcreator.scpadditions.block.Scp914OutputBlock;
import net.mcreator.scpadditions.block.Scp914KeyWindBlock;
import net.mcreator.scpadditions.block.Scp914IntakeDoorClosedBlock;
import net.mcreator.scpadditions.block.Scp914IntakeDoorBlock;
import net.mcreator.scpadditions.block.Scp914IntakeBlock;
import net.mcreator.scpadditions.block.Scp902OpenBlock;
import net.mcreator.scpadditions.block.Scp902ClosedBlock;
import net.mcreator.scpadditions.block.Scp426Block;
import net.mcreator.scpadditions.block.Scp330Block;
import net.mcreator.scpadditions.block.Scp294StockingBlock;
import net.mcreator.scpadditions.block.Scp294OutOfRangeBlock;
import net.mcreator.scpadditions.block.Scp294Block;
import net.mcreator.scpadditions.block.Scp1176Block;
import net.mcreator.scpadditions.block.Scp079onBlock;
import net.mcreator.scpadditions.block.Scp079offBlock;
import net.mcreator.scpadditions.block.Scp079controloffBlock;
import net.mcreator.scpadditions.block.Scp079controlBlock;
import net.mcreator.scpadditions.block.Scp059ContainedBlock;
import net.mcreator.scpadditions.block.Scp059Block;
import net.mcreator.scpadditions.block.Scp0591Block;
import net.mcreator.scpadditions.block.SCP079SystemControlBlock;
import net.mcreator.scpadditions.block.RightReaderWrongBlock;
import net.mcreator.scpadditions.block.RightReaderBlock;
import net.mcreator.scpadditions.block.RightReaderAcceptBlock;
import net.mcreator.scpadditions.block.Lv6RightReaderWrongBlock;
import net.mcreator.scpadditions.block.Lv6RightReaderBlock;
import net.mcreator.scpadditions.block.Lv6RightReaderAcceptBlock;
import net.mcreator.scpadditions.block.Lv6LeftReaderWrongBlock;
import net.mcreator.scpadditions.block.Lv6LeftReaderBlock;
import net.mcreator.scpadditions.block.Lv6LeftReaderAcceptBlock;
import net.mcreator.scpadditions.block.Lv5RightReaderWrongBlock;
import net.mcreator.scpadditions.block.Lv5RightReaderBlock;
import net.mcreator.scpadditions.block.Lv5RightReaderAcceptBlock;
import net.mcreator.scpadditions.block.Lv5LeftReaderWrongBlock;
import net.mcreator.scpadditions.block.Lv5LeftReaderBlock;
import net.mcreator.scpadditions.block.Lv5LeftReaderAcceptBlock;
import net.mcreator.scpadditions.block.Lv4RightReaderWrongBlock;
import net.mcreator.scpadditions.block.Lv4RightReaderBlock;
import net.mcreator.scpadditions.block.Lv4RightReaderAcceptBlock;
import net.mcreator.scpadditions.block.Lv4LeftReaderWrongBlock;
import net.mcreator.scpadditions.block.Lv4LeftReaderBlock;
import net.mcreator.scpadditions.block.Lv4LeftReaderAcceptBlock;
import net.mcreator.scpadditions.block.Lv3RightReaderWrongBlock;
import net.mcreator.scpadditions.block.Lv3RightReaderBlock;
import net.mcreator.scpadditions.block.Lv3RightReaderAcceptBlock;
import net.mcreator.scpadditions.block.Lv3LeftReaderWrongBlock;
import net.mcreator.scpadditions.block.Lv3LeftReaderBlock;
import net.mcreator.scpadditions.block.Lv3LeftReaderAcceptBlock;
import net.mcreator.scpadditions.block.Lv2RightReaderWrongBlock;
import net.mcreator.scpadditions.block.Lv2RightReaderBlock;
import net.mcreator.scpadditions.block.Lv2RightReaderAcceptBlock;
import net.mcreator.scpadditions.block.Lv2LeftReaderWrongBlock;
import net.mcreator.scpadditions.block.Lv2LeftReaderBlock;
import net.mcreator.scpadditions.block.Lv2LeftReaderAcceptBlock;
import net.mcreator.scpadditions.block.LeftReaderWrongBlock;
import net.mcreator.scpadditions.block.LeftReaderBlock;
import net.mcreator.scpadditions.block.LeftReaderAcceptBlock;
import net.mcreator.scpadditions.block.DeconOpenReloadBlock;
import net.mcreator.scpadditions.block.DeconOpenBlock;
import net.mcreator.scpadditions.block.DeconClosedBlock;
import net.mcreator.scpadditions.block.ButtonRonBlock;
import net.mcreator.scpadditions.block.ButtonRoffBlock;
import net.mcreator.scpadditions.block.ButtonLonBlock;
import net.mcreator.scpadditions.block.ButtonLoffBlock;
import net.mcreator.scpadditions.ScpAdditionsMod;

public class ScpAdditionsModBlocks {
	public static final DeferredRegister<Block> REGISTRY = DeferredRegister.create(ForgeRegistries.BLOCKS, ScpAdditionsMod.MODID);
	public static final RegistryObject<Block> BUTTON_ROFF = REGISTRY.register("button_roff", () -> new ButtonRoffBlock());
	public static final RegistryObject<Block> BUTTON_LOFF = REGISTRY.register("button_loff", () -> new ButtonLoffBlock());
	public static final RegistryObject<Block> TESLA_GATE = REGISTRY.register("tesla_gate", () -> new TeslaGateBlock());
	public static final RegistryObject<Block> TESLA_TERMINAL_OFF = REGISTRY.register("tesla_terminal_off", () -> new TeslaTerminalOffBlock());
	public static final RegistryObject<Block> DECON_OPEN = REGISTRY.register("decon_open", () -> new DeconOpenBlock());
	public static final RegistryObject<Block> SCP_079_SYSTEM_CONTROL = REGISTRY.register("scp_079_system_control", () -> new SCP079SystemControlBlock());
	public static final RegistryObject<Block> SCP_079CONTROLOFF = REGISTRY.register("scp_079controloff", () -> new Scp079controloffBlock());
	public static final RegistryObject<Block> SCP_059 = REGISTRY.register("scp_059", () -> new Scp059Block());
	public static final RegistryObject<Block> SCP_059_CONTAINED = REGISTRY.register("scp_059_contained", () -> new Scp059ContainedBlock());
	public static final RegistryObject<Block> SCP_059_1 = REGISTRY.register("scp_059_1", () -> new Scp0591Block());
	public static final RegistryObject<Block> SCP_079ON = REGISTRY.register("scp_079on", () -> new Scp079onBlock());
	public static final RegistryObject<Block> SCP_294 = REGISTRY.register("scp_294", () -> new Scp294Block());
	public static final RegistryObject<Block> SCP_330 = REGISTRY.register("scp_330", () -> new Scp330Block());
	public static final RegistryObject<Block> SCP_426 = REGISTRY.register("scp_426", () -> new Scp426Block());
	public static final RegistryObject<Block> SCP_902_CLOSED = REGISTRY.register("scp_902_closed", () -> new Scp902ClosedBlock());
	public static final RegistryObject<Block> SCP_914BLOCK = REGISTRY.register("scp_914block", () -> new Scp914blockBlock());
	public static final RegistryObject<Block> SCP_914CLOCKWORKS = REGISTRY.register("scp_914clockworks", () -> new Scp914clockworksBlock());
	public static final RegistryObject<Block> SCP_914BODY = REGISTRY.register("scp_914body", () -> new Scp914bodyBlock());
	public static final RegistryObject<Block> SCP_914DIAL_1TO_1 = REGISTRY.register("scp_914dial_1to_1", () -> new Scp914dial1to1Block());
	public static final RegistryObject<Block> SCP_914_KEY_WIND = REGISTRY.register("scp_914_key_wind", () -> new Scp914KeyWindBlock());
	public static final RegistryObject<Block> SCP_914_INTAKE = REGISTRY.register("scp_914_intake", () -> new Scp914IntakeBlock());
	public static final RegistryObject<Block> SCP_914_OUTPUT = REGISTRY.register("scp_914_output", () -> new Scp914OutputBlock());
	public static final RegistryObject<Block> SCP_914_INTAKE_DOOR = REGISTRY.register("scp_914_intake_door", () -> new Scp914IntakeDoorBlock());
	public static final RegistryObject<Block> SCP_914_OUTPUT_DOOR = REGISTRY.register("scp_914_output_door", () -> new Scp914OutputDoorBlock());
	public static final RegistryObject<Block> SCP_1176 = REGISTRY.register("scp_1176", () -> new Scp1176Block());
	public static final RegistryObject<Block> RIGHT_READER = REGISTRY.register("right_reader", () -> new RightReaderBlock());
	public static final RegistryObject<Block> LEFT_READER = REGISTRY.register("left_reader", () -> new LeftReaderBlock());
	public static final RegistryObject<Block> LV_2_RIGHT_READER = REGISTRY.register("lv_2_right_reader", () -> new Lv2RightReaderBlock());
	public static final RegistryObject<Block> LV_2_LEFT_READER = REGISTRY.register("lv_2_left_reader", () -> new Lv2LeftReaderBlock());
	public static final RegistryObject<Block> LV_3_RIGHT_READER = REGISTRY.register("lv_3_right_reader", () -> new Lv3RightReaderBlock());
	public static final RegistryObject<Block> LV_3_LEFT_READER = REGISTRY.register("lv_3_left_reader", () -> new Lv3LeftReaderBlock());
	public static final RegistryObject<Block> LV_4_RIGHT_READER = REGISTRY.register("lv_4_right_reader", () -> new Lv4RightReaderBlock());
	public static final RegistryObject<Block> LV_4_LEFT_READER = REGISTRY.register("lv_4_left_reader", () -> new Lv4LeftReaderBlock());
	public static final RegistryObject<Block> LV_5_RIGHT_READER = REGISTRY.register("lv_5_right_reader", () -> new Lv5RightReaderBlock());
	public static final RegistryObject<Block> LV_5_LEFT_READER = REGISTRY.register("lv_5_left_reader", () -> new Lv5LeftReaderBlock());
	public static final RegistryObject<Block> LV_6_RIGHT_READER = REGISTRY.register("lv_6_right_reader", () -> new Lv6RightReaderBlock());
	public static final RegistryObject<Block> LV_6_LEFT_READER = REGISTRY.register("lv_6_left_reader", () -> new Lv6LeftReaderBlock());
	public static final RegistryObject<Block> TESLA_ACTIVE = REGISTRY.register("tesla_active", () -> new TeslaActiveBlock());
	public static final RegistryObject<Block> TESLA_RECHARGE = REGISTRY.register("tesla_recharge", () -> new TeslaRechargeBlock());
	public static final RegistryObject<Block> TESLA_ACTIVE_2 = REGISTRY.register("tesla_active_2", () -> new TeslaActive2Block());
	public static final RegistryObject<Block> TESLA_ACTIVE_3 = REGISTRY.register("tesla_active_3", () -> new TeslaActive3Block());
	public static final RegistryObject<Block> TESLA_ACTIVE_4 = REGISTRY.register("tesla_active_4", () -> new TeslaActive4Block());
	public static final RegistryObject<Block> TESLA_TERMINAL_BLOCK = REGISTRY.register("tesla_terminal_block", () -> new TeslaTerminalBlockBlock());
	public static final RegistryObject<Block> SCP_079OFF = REGISTRY.register("scp_079off", () -> new Scp079offBlock());
	public static final RegistryObject<Block> SCP_079CONTROL = REGISTRY.register("scp_079control", () -> new Scp079controlBlock());
	public static final RegistryObject<Block> SCP_902_OPEN = REGISTRY.register("scp_902_open", () -> new Scp902OpenBlock());
	public static final RegistryObject<Block> BUTTON_RON = REGISTRY.register("button_ron", () -> new ButtonRonBlock());
	public static final RegistryObject<Block> BUTTON_LON = REGISTRY.register("button_lon", () -> new ButtonLonBlock());
	public static final RegistryObject<Block> SCP_914DIAL_ROUGH = REGISTRY.register("scp_914dial_rough", () -> new Scp914dialRoughBlock());
	public static final RegistryObject<Block> SCP_914DIAL_COARSE = REGISTRY.register("scp_914dial_coarse", () -> new Scp914dialCoarseBlock());
	public static final RegistryObject<Block> SCP_914DIAL_FINE = REGISTRY.register("scp_914dial_fine", () -> new Scp914dialFineBlock());
	public static final RegistryObject<Block> SCP_914DIAL_VERY_FINE = REGISTRY.register("scp_914dial_very_fine", () -> new Scp914dialVeryFineBlock());
	public static final RegistryObject<Block> SCP_914CLOCKWORKS_2 = REGISTRY.register("scp_914clockworks_2", () -> new Scp914clockworks2Block());
	public static final RegistryObject<Block> SCP_914_OUTPUT_DOOR_CLOSED = REGISTRY.register("scp_914_output_door_closed", () -> new Scp914OutputDoorClosedBlock());
	public static final RegistryObject<Block> SCP_914_INTAKE_DOOR_CLOSED = REGISTRY.register("scp_914_intake_door_closed", () -> new Scp914IntakeDoorClosedBlock());
	public static final RegistryObject<Block> DECON_CLOSED = REGISTRY.register("decon_closed", () -> new DeconClosedBlock());
	public static final RegistryObject<Block> DECON_OPEN_RELOAD = REGISTRY.register("decon_open_reload", () -> new DeconOpenReloadBlock());
	public static final RegistryObject<Block> RIGHT_READER_WRONG = REGISTRY.register("right_reader_wrong", () -> new RightReaderWrongBlock());
	public static final RegistryObject<Block> RIGHT_READER_ACCEPT = REGISTRY.register("right_reader_accept", () -> new RightReaderAcceptBlock());
	public static final RegistryObject<Block> LEFT_READER_WRONG = REGISTRY.register("left_reader_wrong", () -> new LeftReaderWrongBlock());
	public static final RegistryObject<Block> LEFT_READER_ACCEPT = REGISTRY.register("left_reader_accept", () -> new LeftReaderAcceptBlock());
	public static final RegistryObject<Block> LV_2_RIGHT_READER_WRONG = REGISTRY.register("lv_2_right_reader_wrong", () -> new Lv2RightReaderWrongBlock());
	public static final RegistryObject<Block> LV_2_RIGHT_READER_ACCEPT = REGISTRY.register("lv_2_right_reader_accept", () -> new Lv2RightReaderAcceptBlock());
	public static final RegistryObject<Block> LV_2_LEFT_READER_WRONG = REGISTRY.register("lv_2_left_reader_wrong", () -> new Lv2LeftReaderWrongBlock());
	public static final RegistryObject<Block> LV_2_LEFT_READER_ACCEPT = REGISTRY.register("lv_2_left_reader_accept", () -> new Lv2LeftReaderAcceptBlock());
	public static final RegistryObject<Block> LV_3_RIGHT_READER_WRONG = REGISTRY.register("lv_3_right_reader_wrong", () -> new Lv3RightReaderWrongBlock());
	public static final RegistryObject<Block> LV_3_RIGHT_READER_ACCEPT = REGISTRY.register("lv_3_right_reader_accept", () -> new Lv3RightReaderAcceptBlock());
	public static final RegistryObject<Block> LV_3_LEFT_READER_WRONG = REGISTRY.register("lv_3_left_reader_wrong", () -> new Lv3LeftReaderWrongBlock());
	public static final RegistryObject<Block> LV_3_LEFT_READER_ACCEPT = REGISTRY.register("lv_3_left_reader_accept", () -> new Lv3LeftReaderAcceptBlock());
	public static final RegistryObject<Block> LV_4_RIGHT_READER_WRONG = REGISTRY.register("lv_4_right_reader_wrong", () -> new Lv4RightReaderWrongBlock());
	public static final RegistryObject<Block> LV_4_RIGHT_READER_ACCEPT = REGISTRY.register("lv_4_right_reader_accept", () -> new Lv4RightReaderAcceptBlock());
	public static final RegistryObject<Block> LV_4_LEFT_READER_WRONG = REGISTRY.register("lv_4_left_reader_wrong", () -> new Lv4LeftReaderWrongBlock());
	public static final RegistryObject<Block> LV_4_LEFT_READER_ACCEPT = REGISTRY.register("lv_4_left_reader_accept", () -> new Lv4LeftReaderAcceptBlock());
	public static final RegistryObject<Block> LV_5_RIGHT_READER_WRONG = REGISTRY.register("lv_5_right_reader_wrong", () -> new Lv5RightReaderWrongBlock());
	public static final RegistryObject<Block> LV_5_RIGHT_READER_ACCEPT = REGISTRY.register("lv_5_right_reader_accept", () -> new Lv5RightReaderAcceptBlock());
	public static final RegistryObject<Block> LV_5_LEFT_READER_WRONG = REGISTRY.register("lv_5_left_reader_wrong", () -> new Lv5LeftReaderWrongBlock());
	public static final RegistryObject<Block> LV_5_LEFT_READER_ACCEPT = REGISTRY.register("lv_5_left_reader_accept", () -> new Lv5LeftReaderAcceptBlock());
	public static final RegistryObject<Block> LV_6_RIGHT_READER_WRONG = REGISTRY.register("lv_6_right_reader_wrong", () -> new Lv6RightReaderWrongBlock());
	public static final RegistryObject<Block> LV_6_RIGHT_READER_ACCEPT = REGISTRY.register("lv_6_right_reader_accept", () -> new Lv6RightReaderAcceptBlock());
	public static final RegistryObject<Block> LV_6_LEFT_READER_WRONG = REGISTRY.register("lv_6_left_reader_wrong", () -> new Lv6LeftReaderWrongBlock());
	public static final RegistryObject<Block> LV_6_LEFT_READER_ACCEPT = REGISTRY.register("lv_6_left_reader_accept", () -> new Lv6LeftReaderAcceptBlock());
	public static final RegistryObject<Block> SCP_294_OUT_OF_RANGE = REGISTRY.register("scp_294_out_of_range", () -> new Scp294OutOfRangeBlock());
	public static final RegistryObject<Block> SCP_294_STOCKING = REGISTRY.register("scp_294_stocking", () -> new Scp294StockingBlock());
}
